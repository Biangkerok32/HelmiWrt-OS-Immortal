#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Repack HelmiWrt OS for s905x devices using GitHub Actions
# Lisence: MIT
# Repacker : Raditya Budi Handoko <https://github.com/radityabh>
# HelmiWrt OS by helmiau.com
#=================================================

name: Build Armvirt64 s9xxx

on:
  workflow_dispatch:
#  schedule:
#    - cron: 59 23 * * *
#  watch:
#    types: started

env:
  REPO_URL: https://github.com/radityabh/amlogic-s9xxx-openwrt
  REPO_BRANCH: main
  UPLOAD_RELEASE: true
  TZ: Asia/Jakarta

jobs:
  "Build 18.06":
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/ubuntu-2004-openwrt)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        echo "COMPILE_STARTINGTIME=$(date +"%Y.%m.%d.%H:%M")" >> $GITHUB_ENV
        export BUILD_TAG=$(curl -sL https://api.github.com/repos/helmiau/HelmiWrt-OS-Immortal/releases | jq -r 'first | .tag_name' | sed 's/helmiwrt-//g')
        echo "BUILD_TAG=$BUILD_TAG" >> $GITHUB_ENV
        export HELMIWRT_REL="https://github.com/helmiau/HelmiWrt-OS-Immortal/releases/download/helmiwrt"
        echo "HELMIWRT_REL=$HELMIWRT_REL" >> $GITHUB_ENV

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        sed -i '/HelmiWrt_/c\ build_image_file="${out_path}/helmiwrt-\${build_op}-k\${kernel}.img"' openwrt/makeHelmi
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Install Feeds
      id: feeds
      run: |
        cd openwrt
        echo "OPENWRTROOT=$PWD" >> $GITHUB_ENV

    - name: Building HelmiWrt
      id: build
      run: |
        cd $OPENWRTROOT
        [ -d openwrt-armvirt ] || mkdir -p openwrt-armvirt
        # Start Build s9xxx based on 18.06 source.
        export HELMIWRT_FILENAME_18="helmiwrt-18.06-k5.4-armvirt-64-default-rootfs.tar.gz"
        echo "HELMIWRT_FILENAME_18=$HELMIWRT_FILENAME_18" >> $GITHUB_ENV
        if wget -q --method=HEAD "$HELMIWRT_REL-$BUILD_TAG/$HELMIWRT_FILENAME_18"; then
          # Download Firmware 18.06
          echo "$HELMIWRT_FILENAME_18 rootfs found under $BUILD_TAG tag! Start downloading..."
          wget -q -P openwrt-armvirt "$HELMIWRT_REL-$BUILD_TAG/$HELMIWRT_FILENAME_18"
          # Build Firmware 18.06
          sudo chmod +x makeHelmi
          sudo ./makeHelmi -d -b s905x3_s905x2_s905x_s905w_s905d_s922x_s912 -k 5.4.0_5.15.15 -a false
          echo "PACKAGED_OUTPUTPATH=${PWD}/out" >> $GITHUB_ENV
          find . -type f -name '$HELMIWRT_FILENAME_18' -exec rm "{}" \;
          find . -type f -name 'helmiwrt-s9*' | while read FILE ; do
            newfile="$(echo ${FILE} | sed 's/helmiwrt/helmiwrt-18.06-k5.4/')" ;
            echo -e $(readlink -f ${FILE}) ;
            mv "${FILE}" "${newfile}" ;
          done
          echo "::set-output name=status::success"
        fi

    - name: Upload Firmware Files to GitHub Release
      uses: ncipollo/release-action@v1
      if: steps.build.outputs.status == 'success' && !cancelled()
      with:
        allowUpdates: true
        prerelease: true
        token: ${{ secrets.HELMIWRT_RW }}
        name: HelmiWrt Test ${{ env.BUILD_TAG }}
        tag: helmiwrt-${{ env.BUILD_TAG }}
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/helmiwrt-*
        body: |
          **HelmiWrt is custom OpenWrt build for**
          - Raspberry Pi 1,2,3,4
          - x86/64 (PC)
          - NanoPi R2C, R2S and R4S
          - OrangePi Zero, R1 Plus
          - Set-top-box s9xxx chipset
          [Donation here](https://www.helmiau.com/pay/index_en.html) • [Read more firmware info and guides](https://www.google.com/search?q=helmi+wrt+os)

  "Build 21.02":
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/ubuntu-2004-openwrt)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        echo "COMPILE_STARTINGTIME=$(date +"%Y.%m.%d.%H:%M")" >> $GITHUB_ENV
        export BUILD_TAG=$(curl -sL https://api.github.com/repos/helmiau/HelmiWrt-OS-Immortal/releases | jq -r 'first | .tag_name' | sed 's/helmiwrt-//g')
        echo "BUILD_TAG=$BUILD_TAG" >> $GITHUB_ENV
        export HELMIWRT_REL="https://github.com/helmiau/HelmiWrt-OS-Immortal/releases/download/helmiwrt"
        echo "HELMIWRT_REL=$HELMIWRT_REL" >> $GITHUB_ENV

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        sed -i '/HelmiWrt_/c\ build_image_file="${out_path}/helmiwrt-\${build_op}-k\${kernel}.img"' openwrt/makeHelmi
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Install Feeds
      id: feeds
      run: |
        cd openwrt
        echo "OPENWRTROOT=$PWD" >> $GITHUB_ENV

    - name: Building HelmiWrt
      id: build
      run: |
        cd $OPENWRTROOT
        [ -d openwrt-armvirt ] || mkdir -p openwrt-armvirt
        # Start Build s9xxx based on 21.02 source.
        export HELMIWRT_FILENAME_20="helmiwrt-20.12-armvirt-64-default-rootfs.tar.gz"
        echo "HELMIWRT_FILENAME_20=$HELMIWRT_FILENAME_20" >> $GITHUB_ENV
        if wget -q --method=HEAD "$HELMIWRT_REL-$BUILD_TAG/$HELMIWRT_FILENAME_20"; then
          # Download Firmware 20.12
          echo "$HELMIWRT_FILENAME_18 rootfs found under $BUILD_TAG tag! Start downloading..."
          wget -q -P openwrt-armvirt "$HELMIWRT_REL-$BUILD_TAG/$HELMIWRT_FILENAME_20"
          # Build Firmware 20.12
          sudo chmod +x makeHelmi
          sudo ./makeHelmi -d -b s905x3_s905x2_s905x_s905w_s905d_s922x_s912 -k 5.4.0_5.15.15 -a false
          echo "PACKAGED_OUTPUTPATH=${PWD}/out" >> $GITHUB_ENV
          find . -type f -name '$HELMIWRT_FILENAME_20' -exec rm "{}" \;
          find . -type f -name 'helmiwrt-s9*' | while read FILE ; do
            newfile="$(echo ${FILE} | sed 's/helmiwrt/helmiwrt-21.02/')" ;
            echo -e $(readlink -f ${FILE}) ;
            mv "${FILE}" "${newfile}" ;
          done
          echo "::set-output name=status::success"
        fi

    - name: Upload Firmware Files to GitHub Release
      uses: ncipollo/release-action@v1
      if: steps.build.outputs.status == 'success' && !cancelled()
      with:
        allowUpdates: true
        prerelease: true
        token: ${{ secrets.HELMIWRT_RW }}
        name: HelmiWrt Test ${{ env.BUILD_TAG }}
        tag: helmiwrt-${{ env.BUILD_TAG }}
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/helmiwrt-*
        body: |
          **HelmiWrt is custom OpenWrt build for**
          - Raspberry Pi 1,2,3,4
          - x86/64 (PC)
          - NanoPi R2C, R2S and R4S
          - OrangePi Zero, R1 Plus
          - Set-top-box s9xxx chipset
          [Donation here](https://www.helmiau.com/pay/index_en.html) • [Read more firmware info and guides](https://www.google.com/search?q=helmi+wrt+os)
